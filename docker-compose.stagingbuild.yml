services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.stagingbuild.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      server:
        condition: service_healthy
        restart: true
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER?REQUIRED}
      - DB_PASSWORD=${DB_PASSWORD?REQUIRED}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID?REQUIRED}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET?REQUIRED}
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - ALLOWED_HOSTS=${ALLOWED_HOSTS?REQUIRED}
      - FRONTEND_URL=${FRONTEND_URL?REQUIRED}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY?REQUIRED}
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8000:8000
    volumes:
      - ./server:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://lenses.acmsjsu.org/api/core/health"]
      interval: 30s
      retries: 10
      start_period: 10s
      timeout: 5s

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD?REQUIRED}
      - POSTGRES_USER=${DB_USER?REQUIRED}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - course_scheduling_db_data:/var/lib/postgresql/data
      - ./createdb.sql:/docker-entrypoint-initdb.d/createdb.sql

volumes:
  course_scheduling_db_data:
